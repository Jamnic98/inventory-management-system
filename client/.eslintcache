[{"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\index.js":"1","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\App.js":"2","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\expiring-soon-panel.js":"3","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\low-stock-panel.js":"4","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\page-header.js":"5","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\main-table.js":"6","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-modal.js":"7","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-tabs.js":"8","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\simple-modal.js":"9","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\remove-item-modal.js":"10","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\tree.js":"11","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\email-modal.js":"12","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\add-items-modal.js":"13","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\delete-item-modal.js":"14","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\add-new-item-modal.js":"15","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\edit-item-modal.js":"16","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\email-tab.js":"17","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\room-location-tab.js":"18","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\room-location-tree.js":"19"},{"size":151,"mtime":1616354322990,"results":"20","hashOfConfig":"21"},{"size":12921,"mtime":1617633392279,"results":"22","hashOfConfig":"21"},{"size":5664,"mtime":1617618399051,"results":"23","hashOfConfig":"21"},{"size":1895,"mtime":1617454397197,"results":"24","hashOfConfig":"21"},{"size":1594,"mtime":1615890494657,"results":"25","hashOfConfig":"21"},{"size":11690,"mtime":1617454397200,"results":"26","hashOfConfig":"21"},{"size":764,"mtime":1617454397208,"results":"27","hashOfConfig":"21"},{"size":2489,"mtime":1617454397209,"results":"28","hashOfConfig":"21"},{"size":1688,"mtime":1617454397215,"results":"29","hashOfConfig":"21"},{"size":4605,"mtime":1617619388966,"results":"30","hashOfConfig":"21"},{"size":1910,"mtime":1617454397226,"results":"31","hashOfConfig":"21"},{"size":3418,"mtime":1617633807825,"results":"32","hashOfConfig":"21"},{"size":4232,"mtime":1617619396354,"results":"33","hashOfConfig":"21"},{"size":3396,"mtime":1617630208370,"results":"34","hashOfConfig":"21"},{"size":8711,"mtime":1617629952498,"results":"35","hashOfConfig":"21"},{"size":8636,"mtime":1617628684153,"results":"36","hashOfConfig":"21"},{"size":3741,"mtime":1617627883933,"results":"37","hashOfConfig":"21"},{"size":5528,"mtime":1617454397203,"results":"38","hashOfConfig":"21"},{"size":4658,"mtime":1617537602300,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"p4asvj",{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\index.js",[],["82","83"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\App.js",["84","85","86","87","88","89","90","91"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\expiring-soon-panel.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\low-stock-panel.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\page-header.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\main-table.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-modal.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-tabs.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\simple-modal.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\remove-item-modal.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\tree.js",["92","93"],"import { uniqueId } from 'lodash';\r\n\r\nexport default class Tree {\r\n  constructor(root) {\r\n    this._root = root || null;\r\n  }\r\n\r\n  _traverse(callback) {\r\n    function goThrough(node) {\r\n      callback(node);\r\n      node.children.forEach((child) => {\r\n        goThrough(child);\r\n      });\r\n    }\r\n    goThrough(this._root);\r\n  }\r\n\r\n  _addNode(id, label, layer, isOpen, isSelected, editing, parent) {\r\n    const newNode = {\r\n      id: id,\r\n      layer: layer,\r\n      isOpen: isOpen,\r\n      isSelected: isSelected,\r\n      editing: editing,\r\n      children: [],\r\n      label: label,\r\n      parent: parent,\r\n    };\r\n\r\n    if (this._root === null) {\r\n      this._root = newNode;\r\n      return;\r\n    }\r\n\r\n    this._traverse((node) => {\r\n      if (node.label === parent && node.label !== label) {\r\n        node.children.push(newNode);\r\n      }\r\n    });\r\n  }\r\n\r\n  _removeNode(label, parent) {\r\n    this._traverse((node) => {\r\n      node.children.forEach((childNode, index) => {\r\n        if (childNode.label === label && childNode.parent === parent) {\r\n          node.children.splice(index, 1);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  _search(label) {\r\n    let returnNode = 'Not Found';\r\n    this._traverse((node) => {\r\n      if (node.label === label) {\r\n        returnNode = node;\r\n      }\r\n    });\r\n    return returnNode;\r\n  }\r\n\r\n  _displayLeafs(parentValue) {\r\n    const parentNode =\r\n      typeof parentValue === 'string' ? this._search(parentValue) : parentValue;\r\n    let leafsRet = [];\r\n    if (parentValue.children && !parentValue.children.length) {\r\n      return parentValue;\r\n    }\r\n\r\n    parentNode.children.forEach((child) => {\r\n      leafsRet.push(this._displayLeafs(child));\r\n    });\r\n\r\n    return leafsRet.flat();\r\n  }\r\n}\r\n\r\nclass Node {\r\n  constructor(label, open, editing, children) {\r\n    this.label = label;\r\n    this.open = open;\r\n    this.editing = editing;\r\n    this.children = children;\r\n  }\r\n}\r\n","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\email-modal.js",["94"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\add-items-modal.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\delete-item-modal.js",["95","96","97"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\add-new-item-modal.js",["98","99","100"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\edit-item-modal.js",["101","102","103","104"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\email-tab.js",["105","106"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\room-location-tab.js",["107","108"],"import React, { useState } from 'react';\r\nimport RoomLocationTree from './room-location-tree.js';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Lang, { uniqueId } from 'lodash';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  deleteButton: {\r\n    float: 'right',\r\n  },\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport default function RoomLocationTab(props) {\r\n  const { tree, setTree } = props;\r\n  const classes = useStyles();\r\n\r\n  const handleDelete = () => {\r\n    const treeCopy = Lang.cloneDeep(tree);\r\n    treeCopy._traverse((node) => {\r\n      if (node.isSelected) {\r\n        treeCopy._removeNode(node.label, node.parent);\r\n      }\r\n    });\r\n    setTree(treeCopy);\r\n  };\r\n\r\n  const handleClick = (nodeId) => {\r\n    const treeCopy = Lang.cloneDeep(tree);\r\n    treeCopy._traverse((node) => {\r\n      node.isSelected = false;\r\n      if (node.id === nodeId) {\r\n        node.isOpen = !node.isOpen;\r\n      }\r\n    });\r\n    setTree(treeCopy);\r\n  };\r\n\r\n  const handleDoubleClick = (nodeId) => {\r\n    const treeCopy = Lang.cloneDeep(tree);\r\n    treeCopy._traverse((node) => {\r\n      node.isSelected = false;\r\n      if (node.id === nodeId) {\r\n        node.editing = true;\r\n      } else {\r\n        node.editing = false;\r\n      }\r\n    });\r\n    setTree(treeCopy);\r\n  };\r\n\r\n  const handleClickAway = (e) => {\r\n    /* const treeCopy = Lang.cloneDeep(tree);\r\n    treeCopy._traverse((node) => {\r\n      node.editing = false;\r\n      node.isSelected = false;\r\n    });\r\n    setTree(treeCopy); */\r\n  };\r\n\r\n  const handleKeyPressed = (e) => {\r\n    if (e.key === 'Enter') {\r\n      const treeCopy = Lang.cloneDeep(tree);\r\n      treeCopy._traverse((node) => (node.editing = false));\r\n      setTree(treeCopy);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e, nodeId) => {\r\n    const text = e.target.value;\r\n    const treeCopy = Lang.cloneDeep(tree);\r\n    treeCopy._traverse((node) => {\r\n      if (node.id === nodeId) {\r\n        node.label = text;\r\n      }\r\n    });\r\n    setTree(treeCopy);\r\n  };\r\n\r\n  const setSelected = (nodeId) => {\r\n    const treeCopy = Lang.cloneDeep(tree);\r\n    treeCopy._traverse((node) => {\r\n      if (node.id === nodeId) {\r\n        if (!isEditing()) {\r\n          node.isSelected = !node.isSelected;\r\n        }\r\n      } else {\r\n        node.isSelected = false;\r\n      }\r\n    });\r\n    setTree(treeCopy);\r\n  };\r\n\r\n  const isEditing = () => {\r\n    let result = false;\r\n    tree._traverse((node) => {\r\n      if (node.editing) {\r\n        result = true;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const isSelected = () => {\r\n    let output = false;\r\n    tree._traverse((node) => {\r\n      if (node.isSelected) {\r\n        output = true;\r\n      }\r\n    });\r\n    return output;\r\n  };\r\n\r\n  const disableAddChild = () => {\r\n    if (isSelected()) {\r\n      const selectedNode = getSelectedNode();\r\n      return selectedNode.layer === 2;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleAddChild = (nodeId) => {\r\n    const treeCopy = Lang.cloneDeep(tree);\r\n    if (tree._root !== null) {\r\n      const selectedNode = getSelectedNode();\r\n      const { label, parent, layer } = selectedNode;\r\n      treeCopy._traverse((node) => {\r\n        node.editing = false;\r\n        if (node.label === label && node.parent === parent) {\r\n          node.isOpen = true;\r\n        }\r\n      });\r\n      treeCopy._addNode(\r\n        uniqueId(),\r\n        'new',\r\n        layer + 1,\r\n        false,\r\n        false,\r\n        false,\r\n        label\r\n      );\r\n      setTree(treeCopy);\r\n    } else {\r\n      treeCopy._addNode(uniqueId(), 'home', 0, false, false, false, null);\r\n      setTree(treeCopy);\r\n    }\r\n  };\r\n\r\n  const getSelectedNode = () => {\r\n    let result = null;\r\n    tree._traverse((node) => {\r\n      if (node.isSelected) {\r\n        result = node;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const setOutput = () => {\r\n    if (tree._root !== null) {\r\n      const selected = isSelected();\r\n      return (\r\n        <div className={classes.root}>\r\n          <IconButton\r\n            color='primary'\r\n            disabled={disableAddChild()}\r\n            onClick={handleAddChild}\r\n          >\r\n            <PlaylistAddIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color='primary'\r\n            disabled={!selected || tree._root.isSelected}\r\n            onClick={handleDelete}\r\n            className={classes.deleteButton}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n          <RoomLocationTree\r\n            handleClick={handleClick}\r\n            handleDoubleClick={handleDoubleClick}\r\n            handleKeyPressed={handleKeyPressed}\r\n            handleChange={handleChange}\r\n            setSelected={setSelected}\r\n            tree={tree}\r\n            setTree={setTree}\r\n            handleClickAway={(e) => handleClickAway(e)}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={classes.root}>\r\n          <IconButton color='primary' onClick={handleAddChild}>\r\n            <PlaylistAddIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color='primary'\r\n            onClick={handleDelete}\r\n            className={classes.deleteButton}\r\n            disabled\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return setOutput();\r\n}\r\n","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\room-location-tree.js",["109","110"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport './room-location-tree.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: '300px',\r\n    overflow: 'auto',\r\n  },\r\n  textField: {\r\n    marginLeft: '0.5em',\r\n    fontSize: '1.2em',\r\n    border: 'none',\r\n    outline: 'none',\r\n    backgroundColor: 'transparent',\r\n    cursor: 'pointer',\r\n  },\r\n  dropDownButton: {\r\n    cursor: 'pointer',\r\n  },\r\n  box: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nexport default function RoomLocationTree(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    tree,\r\n    handleClick,\r\n    handleDoubleClick,\r\n    handleKeyPressed,\r\n    handleChange,\r\n    setSelected,\r\n    handleClickAway,\r\n  } = props;\r\n\r\n  const getPadding = (layer) => {\r\n    return `${50 * layer}px`;\r\n  };\r\n\r\n  const createTree = (parentNode) => {\r\n    const {\r\n      id: nodeId,\r\n      children,\r\n      editing,\r\n      label,\r\n      layer,\r\n      isSelected,\r\n    } = parentNode;\r\n\r\n    if (children.length === 0) {\r\n      return (\r\n        <ListItem margin='dense' style={{ paddingLeft: getPadding(layer) }}>\r\n          <ClickAwayListener\r\n            mouseEvent={isSelected || editing ? 'onClick' : false}\r\n            onClickAway={() => handleClickAway()}\r\n          >\r\n            <div\r\n              className={`${classes.box} ${isSelected ? 'selected' : ''}`}\r\n              onClick={() => setSelected(nodeId)}\r\n            >\r\n              <ListItemText\r\n                onDoubleClick={() => handleDoubleClick(nodeId)}\r\n                primary={\r\n                  <input\r\n                    type='text'\r\n                    value={label}\r\n                    className={classes.textField}\r\n                    disabled={!editing}\r\n                    onChange={(e) => handleChange(e, nodeId)}\r\n                    onKeyDown={(e) => handleKeyPressed(e)}\r\n                  />\r\n                }\r\n              />\r\n            </div>\r\n          </ClickAwayListener>\r\n        </ListItem>\r\n      );\r\n    } else {\r\n      const {\r\n        id: nodeId,\r\n        layer,\r\n        label,\r\n        editing,\r\n        isOpen,\r\n        children,\r\n        isSelected,\r\n      } = parentNode;\r\n      return (\r\n        <>\r\n          <ListItem\r\n            margin='dense'\r\n            onDoubleClick={() => handleDoubleClick(nodeId)}\r\n            style={{ paddingLeft: getPadding(layer) }}\r\n          >\r\n            {isOpen ? (\r\n              <ExpandLess\r\n                fontSize='large'\r\n                className={classes.dropDownButton}\r\n                onClick={() => handleClick(nodeId)}\r\n              />\r\n            ) : (\r\n              <ExpandMore\r\n                fontSize='large'\r\n                className={classes.dropDownButton}\r\n                onClick={() => handleClick(nodeId)}\r\n              />\r\n            )}\r\n            <ClickAwayListener\r\n              mouseEvent={isSelected || editing ? 'onClick' : false}\r\n              onClickAway={() => handleClickAway()}\r\n            >\r\n              <div\r\n                className={`${classes.box} ${isSelected ? 'selected' : ''}`}\r\n                onClick={() => setSelected(nodeId)}\r\n              >\r\n                <ListItemText\r\n                  primary={\r\n                    <input\r\n                      type='text'\r\n                      value={label}\r\n                      className={classes.textField}\r\n                      disabled={!editing}\r\n                      onChange={(e) => handleChange(e, nodeId)}\r\n                      onKeyDown={(e) => handleKeyPressed(e)}\r\n                    />\r\n                  }\r\n                />\r\n              </div>\r\n            </ClickAwayListener>\r\n          </ListItem>\r\n          <Collapse in={isOpen} timeout='auto' unmountOnExit>\r\n            <List component='div' disablePadding>\r\n              {children.map((node) => createTree(node))}\r\n            </List>\r\n          </Collapse>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component='div' disablePadding>\r\n        {createTree(tree._root)}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":130,"column":10,"nodeType":"117","messageId":"118","endLine":130,"endColumn":19},{"ruleId":"115","severity":1,"message":"119","line":154,"column":9,"nodeType":"117","messageId":"118","endLine":154,"endColumn":23},{"ruleId":"115","severity":1,"message":"120","line":155,"column":13,"nodeType":"117","messageId":"118","endLine":155,"endColumn":15},{"ruleId":"115","severity":1,"message":"121","line":155,"column":17,"nodeType":"117","messageId":"118","endLine":155,"endColumn":22},{"ruleId":"115","severity":1,"message":"122","line":161,"column":9,"nodeType":"117","messageId":"118","endLine":161,"endColumn":20},{"ruleId":"115","severity":1,"message":"120","line":162,"column":13,"nodeType":"117","messageId":"118","endLine":162,"endColumn":15},{"ruleId":"115","severity":1,"message":"121","line":162,"column":17,"nodeType":"117","messageId":"118","endLine":162,"endColumn":22},{"ruleId":"115","severity":1,"message":"123","line":203,"column":13,"nodeType":"117","messageId":"118","endLine":203,"endColumn":16},{"ruleId":"115","severity":1,"message":"124","line":1,"column":10,"nodeType":"117","messageId":"118","endLine":1,"endColumn":18},{"ruleId":"115","severity":1,"message":"125","line":78,"column":7,"nodeType":"117","messageId":"118","endLine":78,"endColumn":11},{"ruleId":"126","severity":1,"message":"127","line":56,"column":47,"nodeType":"128","messageId":"129","endLine":56,"endColumn":49},{"ruleId":"115","severity":1,"message":"130","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":18},{"ruleId":"115","severity":1,"message":"131","line":52,"column":9,"nodeType":"117","messageId":"118","endLine":52,"endColumn":24},{"ruleId":"115","severity":1,"message":"132","line":62,"column":9,"nodeType":"117","messageId":"118","endLine":62,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":64,"column":6,"nodeType":"135","endLine":64,"endColumn":17,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":109,"column":5,"nodeType":"139","messageId":"140","endLine":128,"endColumn":6},{"ruleId":"115","severity":1,"message":"141","line":208,"column":9,"nodeType":"117","messageId":"118","endLine":208,"endColumn":23},{"ruleId":"133","severity":1,"message":"142","line":62,"column":6,"nodeType":"135","endLine":62,"endColumn":21,"suggestions":"143"},{"ruleId":"133","severity":1,"message":"144","line":68,"column":6,"nodeType":"135","endLine":68,"endColumn":18,"suggestions":"145"},{"ruleId":"137","severity":1,"message":"138","line":110,"column":5,"nodeType":"139","messageId":"140","endLine":129,"endColumn":6},{"ruleId":"115","severity":1,"message":"141","line":208,"column":9,"nodeType":"117","messageId":"118","endLine":208,"endColumn":23},{"ruleId":"115","severity":1,"message":"146","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":18},{"ruleId":"126","severity":1,"message":"147","line":33,"column":27,"nodeType":"128","messageId":"148","endLine":33,"endColumn":29},{"ruleId":"115","severity":1,"message":"149","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"150","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":15},{"ruleId":"115","severity":1,"message":"149","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"151","line":10,"column":8,"nodeType":"117","messageId":"118","endLine":10,"endColumn":21},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'locations' is assigned a value but never used.","Identifier","unusedVar","'deleteLocation' is assigned a value but never used.","'id' is assigned a value but never used.","'label' is assigned a value but never used.","'addLocation' is assigned a value but never used.","'res' is assigned a value but never used.","'uniqueId' is defined but never used.","'Node' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'IconButton' is defined but never used.","'handleAddButton' is assigned a value but never used.","'handleRemoveButton' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getLocations' and 'getRooms'. Either include them or remove the dependency array.","ArrayExpression",["154"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'expirationDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getRooms'. Either include it or remove the dependency array.",["155"],"React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.",["156"],"'Typography' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'useState' is defined but never used.","'AddIcon' is defined but never used.","'ListSubheader' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [getLocations, getRooms, itemToAdd]",{"range":"163","text":"164"},"Update the dependencies array to be: [getRooms, itemsToModify]",{"range":"165","text":"166"},"Update the dependencies array to be: [getLocations, itemToEdit]",{"range":"167","text":"168"},[1600,1611],"[getLocations, getRooms, itemToAdd]",[1408,1423],"[getRooms, itemsToModify]",[1537,1549],"[getLocations, itemToEdit]"]