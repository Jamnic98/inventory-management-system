[{"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\index.js":"1","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\App.js":"2","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\expiring-soon-panel.js":"3","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\low-stock-panel.js":"4","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\page-header.js":"5","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\main-table.js":"6","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-modal.js":"7","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-tabs.js":"8","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\simple-modal.js":"9","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\remove-item-modal.js":"10"},{"size":151,"mtime":1615203449634,"results":"11","hashOfConfig":"12"},{"size":5923,"mtime":1616171539125,"results":"13","hashOfConfig":"12"},{"size":5333,"mtime":1615996234221,"results":"14","hashOfConfig":"12"},{"size":1640,"mtime":1615890645112,"results":"15","hashOfConfig":"12"},{"size":1594,"mtime":1615890494657,"results":"16","hashOfConfig":"12"},{"size":10706,"mtime":1616166690451,"results":"17","hashOfConfig":"12"},{"size":474,"mtime":1615900235720,"results":"18","hashOfConfig":"12"},{"size":2151,"mtime":1615841220842,"results":"19","hashOfConfig":"12"},{"size":1792,"mtime":1616161046210,"results":"20","hashOfConfig":"12"},{"size":4485,"mtime":1616170875295,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"p4asvj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\index.js",[],["45","46"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\App.js",["47","48","49","50","51","52","53"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\expiring-soon-panel.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\low-stock-panel.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\page-header.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\main-table.js",["54","55","56","57","58"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Box from '@material-ui/core/Box';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst ROWS_PER_PAGE = 5;\r\nconst ROW_HEIGHT = 53;\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'item',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Item',\r\n  },\r\n  { id: 'quantity', numeric: true, disablePadding: false, label: 'Quantity' },\r\n  { id: 'room', numeric: true, disablePadding: false, label: 'Room' },\r\n  { id: 'location', numeric: true, disablePadding: false, label: 'Location' },\r\n  {\r\n    id: 'expirationDate',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Exp. date',\r\n  },\r\n  {\r\n    id: 'lowStockAlert',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Low Stock Alert',\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, numSelected, rowCount } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding='checkbox'>\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all items' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'center' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n          >\r\n            <div className={classes.textContainer}>{headCell.label}</div>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  tableContainer: {\r\n    minHeight: `${100 + (ROWS_PER_PAGE - 1) * ROW_HEIGHT}px`,\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  textContainer: {\r\n    display: 'block',\r\n    /* width: '100%', */\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  tablePagination: {\r\n    display: 'flex',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function MainTable(props) {\r\n  const {\r\n    allItems,\r\n    deleteItemById,\r\n    addItem,\r\n    setAllItems,\r\n    openDeleteModal,\r\n    openAddModal,\r\n    openEditModal,\r\n    itemsToModify,\r\n    setItemsToModify,\r\n    setAlert,\r\n  } = props;\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [filterWord, setFilterWord] = useState('');\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  const emptyRows =\r\n    ROWS_PER_PAGE -\r\n    Math.min(ROWS_PER_PAGE, filteredData.length - page * ROWS_PER_PAGE);\r\n\r\n  useEffect(() => {\r\n    const trimmedFW = filterWord.trim().toLowerCase();\r\n    const regEx = new RegExp(trimmedFW, 'i');\r\n    setFilteredData(\r\n      allItems.filter((row) => {\r\n        if (trimmedFW.length > 0) {\r\n          return regEx.test(row.name);\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n    );\r\n  }, [allItems, filterWord]);\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      setItemsToModify(filteredData);\r\n    } else {\r\n      setItemsToModify([]);\r\n    }\r\n  };\r\n\r\n  const handleClick = (_event, item) => {\r\n    const itemIDArray = itemsToModify.map((item) => item._id);\r\n    const selectedIndex = itemIDArray.indexOf(item._id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(itemsToModify, item);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(itemsToModify.slice(1));\r\n    } else if (selectedIndex === itemsToModify.length - 1) {\r\n      newSelected = newSelected.concat(itemsToModify.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        itemsToModify.slice(0, selectedIndex),\r\n        itemsToModify.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setItemsToModify(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (_event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const isSelected = (row) =>\r\n    itemsToModify.map((item) => item._id).indexOf(row._id) !== -1;\r\n\r\n  const setExpirationDate = (date) => {\r\n    return parseInt(Date.parse(date)) !== 0\r\n      ? new Date(date).toLocaleDateString()\r\n      : 'N/A';\r\n  };\r\n\r\n  const handleDeleteButton = async () => {\r\n    if (itemsToModify.length > 0) {\r\n      openDeleteModal();\r\n    } else {\r\n      setAlert({ message: 'Select an item to delete', type: 'error' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box py={1}>\r\n      <Box mx={1}>\r\n        <ButtonGroup\r\n          color='default'\r\n          variant='text'\r\n          size='large'\r\n          aria-label='button group'\r\n        >\r\n          <Button onClick={addItem} endIcon={<AddIcon>add</AddIcon>}>\r\n            add\r\n          </Button>\r\n          <Button /* onClick={addItem} */ endIcon={<EditIcon>edit</EditIcon>}>\r\n            edit\r\n          </Button>\r\n          <Button\r\n            onClick={handleDeleteButton}\r\n            endIcon={<DeleteIcon>delete</DeleteIcon>}\r\n          >\r\n            delete\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Box>\r\n      <TableContainer className={classes.tableContainer}>\r\n        <Table\r\n          className={classes.table}\r\n          aria-labelledby='tableTitle'\r\n          aria-label='enhanced table'\r\n        >\r\n          <EnhancedTableHead\r\n            classes={classes}\r\n            numSelected={itemsToModify.length}\r\n            onSelectAllClick={handleSelectAllClick}\r\n            rowCount={filteredData.length}\r\n          />\r\n          <TableBody>\r\n            {filteredData\r\n              .slice(page * ROWS_PER_PAGE, page * ROWS_PER_PAGE + ROWS_PER_PAGE)\r\n              .map((row, index) => {\r\n                const isItemSelected = isSelected(row);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    onClick={(event) => handleClick(event, row)}\r\n                    role='checkbox'\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row._id}\r\n                  >\r\n                    <TableCell className={classes.tableCell} padding='checkbox'>\r\n                      <Checkbox\r\n                        checked={isItemSelected}\r\n                        inputProps={{ 'aria-labelledby': labelId }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className={classes.tableCell}\r\n                      component='th'\r\n                      id={labelId}\r\n                      scope='row'\r\n                      padding='none'\r\n                      align='center'\r\n                    >\r\n                      <div className={classes.textContainer}>{row.name}</div>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell} align='center'>\r\n                      <div className={classes.textContainer}>\r\n                        {row.quantity}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell} align='center'>\r\n                      <div className={classes.textContainer}>{row.room}</div>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell} align='center'>\r\n                      <div className={classes.textContainer}>\r\n                        {row.location}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell} align='center'>\r\n                      <div className={classes.textContainer}>\r\n                        {setExpirationDate(row.expirationDate)}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell} align='center'>\r\n                      <div className={classes.textContainer}>\r\n                        {row.lowStockAlert.toString()}\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: ROW_HEIGHT * emptyRows }}>\r\n                <TableCell colSpan={7} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Box mx={2}>\r\n        <TextField\r\n          width='90%'\r\n          onChange={(e) => {\r\n            setPage(0);\r\n            setFilterWord(e.target.value);\r\n          }}\r\n          label='Search by item'\r\n          variant='outlined'\r\n          margin='normal'\r\n          value={filterWord}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position='end'>\r\n                <Button onClick={() => setFilterWord('')}>\r\n                  <CloseIcon />\r\n                </Button>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        ></TextField>\r\n        <TablePagination\r\n          className={classes.tablePagination}\r\n          rowsPerPageOptions={[0]}\r\n          component='div'\r\n          count={filteredData.length}\r\n          rowsPerPage={ROWS_PER_PAGE}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-modal.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-tabs.js",["59"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role='tabpanel'\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: 'theme.palette.background.paper',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport default function SettingsTabs() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static' color='default'>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor='primary'\r\n          textColor='primary'\r\n          variant='fullWidth'\r\n          aria-label='settings'\r\n        >\r\n          <Tab label='Item One' {...a11yProps(0)} />\r\n          <Tab label='Item Two' {...a11yProps(1)} />\r\n          <Tab label='Item Three' {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0} dir={theme.direction}>\r\n        Item One\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1} dir={theme.direction}>\r\n        Item Two\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2} dir={theme.direction}>\r\n        Item Three\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\simple-modal.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\remove-item-modal.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":14,"column":8,"nodeType":"66","messageId":"67","endLine":14,"endColumn":13},{"ruleId":"64","severity":1,"message":"68","line":33,"column":10,"nodeType":"66","messageId":"67","endLine":33,"endColumn":17},{"ruleId":"64","severity":1,"message":"69","line":34,"column":10,"nodeType":"66","messageId":"67","endLine":34,"endColumn":16},{"ruleId":"64","severity":1,"message":"70","line":34,"column":18,"nodeType":"66","messageId":"67","endLine":34,"endColumn":27},{"ruleId":"64","severity":1,"message":"71","line":79,"column":13,"nodeType":"66","messageId":"67","endLine":79,"endColumn":21},{"ruleId":"64","severity":1,"message":"72","line":104,"column":9,"nodeType":"66","messageId":"67","endLine":104,"endColumn":22},{"ruleId":"64","severity":1,"message":"73","line":108,"column":9,"nodeType":"66","messageId":"67","endLine":108,"endColumn":23},{"ruleId":"64","severity":1,"message":"74","line":13,"column":8,"nodeType":"66","messageId":"67","endLine":13,"endColumn":18},{"ruleId":"64","severity":1,"message":"75","line":121,"column":5,"nodeType":"66","messageId":"67","endLine":121,"endColumn":19},{"ruleId":"64","severity":1,"message":"76","line":123,"column":5,"nodeType":"66","messageId":"67","endLine":123,"endColumn":16},{"ruleId":"64","severity":1,"message":"77","line":125,"column":5,"nodeType":"66","messageId":"67","endLine":125,"endColumn":17},{"ruleId":"64","severity":1,"message":"72","line":126,"column":5,"nodeType":"66","messageId":"67","endLine":126,"endColumn":18},{"ruleId":"64","severity":1,"message":"78","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":17},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'Slide' is defined but never used.","Identifier","unusedVar","'editing' is assigned a value but never used.","'adding' is assigned a value but never used.","'setAdding' is assigned a value but never used.","'response' is assigned a value but never used.","'openEditModal' is assigned a value but never used.","'closeEditModal' is assigned a value but never used.","'IconButton' is defined but never used.","'deleteItemById' is assigned a value but never used.","'setAllItems' is assigned a value but never used.","'openAddModal' is assigned a value but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]