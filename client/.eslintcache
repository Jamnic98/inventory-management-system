[{"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\index.js":"1","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\App.js":"2","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\expiring-soon-panel.js":"3","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\low-stock-panel.js":"4","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\page-header.js":"5","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\main-table.js":"6","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-modal.js":"7","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-tabs.js":"8","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\simple-modal.js":"9","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\remove-item-modal.js":"10","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\tree.js":"11","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\email-modal.js":"12","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\add-items-modal.js":"13","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\delete-item-modal.js":"14","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\add-new-item-modal.js":"15","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\edit-item-modal.js":"16","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\email-tab.js":"17","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\room-location-tab.js":"18","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\room-location-tree.js":"19"},{"size":151,"mtime":1616354322990,"results":"20","hashOfConfig":"21"},{"size":12706,"mtime":1617454397185,"results":"22","hashOfConfig":"21"},{"size":5642,"mtime":1617538682094,"results":"23","hashOfConfig":"21"},{"size":1895,"mtime":1617454397197,"results":"24","hashOfConfig":"21"},{"size":1594,"mtime":1615890494657,"results":"25","hashOfConfig":"21"},{"size":11690,"mtime":1617454397200,"results":"26","hashOfConfig":"21"},{"size":764,"mtime":1617454397208,"results":"27","hashOfConfig":"21"},{"size":2489,"mtime":1617454397209,"results":"28","hashOfConfig":"21"},{"size":1688,"mtime":1617454397215,"results":"29","hashOfConfig":"21"},{"size":4505,"mtime":1617454397202,"results":"30","hashOfConfig":"21"},{"size":1910,"mtime":1617454397226,"results":"31","hashOfConfig":"21"},{"size":3106,"mtime":1617454397193,"results":"32","hashOfConfig":"21"},{"size":4137,"mtime":1617454397187,"results":"33","hashOfConfig":"21"},{"size":3344,"mtime":1617549857191,"results":"34","hashOfConfig":"21"},{"size":8727,"mtime":1617549523416,"results":"35","hashOfConfig":"21"},{"size":8540,"mtime":1617549340795,"results":"36","hashOfConfig":"21"},{"size":3741,"mtime":1617454397194,"results":"37","hashOfConfig":"21"},{"size":5528,"mtime":1617454397203,"results":"38","hashOfConfig":"21"},{"size":4658,"mtime":1617537602300,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"p4asvj",{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\index.js",[],["84","85"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\App.js",["86","87","88","89","90","91","92","93"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tree from './components/tree.js';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PageHeader from './components/page-header.js';\r\nimport ExpiringSoonPanel from './components/expiring-soon-panel.js';\r\nimport SettingsModal from './components/settings-modal.js';\r\nimport EmailModal from './components/email-modal.js';\r\nimport AddItemsModal from './components/add-items-modal.js';\r\nimport AddNewItemModal from './components/add-new-item-modal.js';\r\nimport DeleteItemModal from './components/delete-item-modal.js';\r\nimport RemoveItemModal from './components/remove-item-modal.js';\r\nimport EditItemModal from './components/edit-item-modal.js';\r\nimport LowStockPanel from './components/low-stock-panel.js';\r\nimport MainTable from './components/main-table.js';\r\nimport SnackBar from '@material-ui/core/SnackBar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst socket = new WebSocket('ws://192.168.68.116:8080');\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [tree, setTree] = useState(\r\n    new Tree({\r\n      id: 1,\r\n      label: 'home',\r\n      layer: 0,\r\n      isOpen: true,\r\n      isSelected: false,\r\n      editing: false,\r\n      children: [\r\n        {\r\n          id: 2,\r\n          label: 'kitchen',\r\n          layer: 1,\r\n          isOpen: true,\r\n          isSelected: false,\r\n          editing: false,\r\n          children: [\r\n            {\r\n              id: 4,\r\n              label: 'under sink cupboard',\r\n              layer: 2,\r\n              isOpen: false,\r\n              isSelected: false,\r\n              editing: false,\r\n              children: [],\r\n              parent: 'kitchen',\r\n            },\r\n            {\r\n              id: 5,\r\n              label: 'main cupboard',\r\n              layer: 2,\r\n              isOpen: false,\r\n              isSelected: false,\r\n              editing: false,\r\n              children: [],\r\n              parent: 'kitchen',\r\n            },\r\n            {\r\n              id: 6,\r\n              label: 'top shelf cupboard',\r\n              layer: 2,\r\n              isOpen: false,\r\n              isSelected: false,\r\n              editing: false,\r\n              children: [],\r\n              parent: 'kitchen',\r\n            },\r\n          ],\r\n          parent: 'home',\r\n        },\r\n        {\r\n          id: 3,\r\n          label: 'bathroom',\r\n          layer: 1,\r\n          isOpen: true,\r\n          isSelected: false,\r\n          editing: false,\r\n          children: [\r\n            {\r\n              id: 7,\r\n              label: 'under sink cupboard',\r\n              layer: 2,\r\n              isOpen: false,\r\n              isSelected: false,\r\n              editing: false,\r\n              children: [],\r\n              parent: 'bathroom',\r\n            },\r\n            {\r\n              id: 8,\r\n              label: 'end of bath cupboard',\r\n              layer: 2,\r\n              isOpen: false,\r\n              isSelected: false,\r\n              editing: false,\r\n              children: [],\r\n              parent: 'bathroom',\r\n            },\r\n          ],\r\n          parent: 'home',\r\n        },\r\n      ],\r\n      parent: null,\r\n    })\r\n  );\r\n  const [allItems, setAllItems] = useState([]);\r\n  const [lowStockItems, setLowStockItems] = useState([]);\r\n  const [emails, setEmails] = useState([]);\r\n  const [alert, setAlert] = useState(null);\r\n  const [itemsToModify, setItemsToModify] = useState([]);\r\n  const [settings, setSettings] = useState(false);\r\n  const [removing, setRemoving] = useState(false);\r\n  const [editing, setEditing] = useState(false);\r\n  const [adding, setAdding] = useState(false);\r\n  const [emailing, setEmailing] = useState(false);\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllItems().then((items) => setAllItems(items));\r\n    getEmails().then((emails) => {\r\n      setEmails(emails);\r\n    });\r\n    getLocations().then((locations) => setLocations(locations));\r\n  }, []);\r\n\r\n  socket.addEventListener('message', async (message) => {\r\n    setAllItems(await getAllItems());\r\n  });\r\n\r\n  const getAllItems = async () => {\r\n    const response = await axios.get('/current-items');\r\n    return response.data.reverse();\r\n  };\r\n\r\n  const getLocations = async () => {\r\n    const response = await axios.get('/rooms-and-locations');\r\n    return response.data;\r\n  };\r\n\r\n  const deleteLocation = async (node) => {\r\n    const { id, label } = node;\r\n    // delete node and all children by deleting all nodes with parentNode === label\r\n    // const response = await axios.delete('/rooms-and-locations/delete/');\r\n    // return response.data;\r\n  };\r\n\r\n  const addLocation = async (node) => {\r\n    const { id, label } = node;\r\n  };\r\n\r\n  const getEmails = async () => {\r\n    const response = await axios.get('/emails');\r\n    return response.data.reverse();\r\n  };\r\n\r\n  const addItem = async (item) => {\r\n    try {\r\n      const response = await axios.post('/current-items/add', item);\r\n      setAllItems([response.data, ...allItems]);\r\n      socket.send(JSON.stringify({ type: 'add' }));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const addEmail = async (name, address) => {\r\n    const email = { name, address };\r\n    const response = await axios.post('/emails/add', email);\r\n    setEmails([response.data, ...emails]);\r\n  };\r\n\r\n  const sendEmails = (emailList, message) => {\r\n    socket.send(\r\n      JSON.stringify({\r\n        type: 'email',\r\n        subject: 'Test',\r\n        content: message,\r\n        recipients: emailList,\r\n      })\r\n    );\r\n  };\r\n\r\n  const deleteEmailById = async (emailId) => {\r\n    await axios.delete(`emails/${emailId}`);\r\n  };\r\n\r\n  const deleteItemById = async (itemId) => {\r\n    try {\r\n      const res = await axios.delete(`/current-items/${itemId}`);\r\n      socket.send(JSON.stringify({ type: 'delete' }));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const updateItemById = async (updatedItem) => {\r\n    try {\r\n      const { _id } = updatedItem;\r\n      await axios.put(`/current-items/update/${_id}`, updatedItem);\r\n      socket.send(JSON.stringify({ type: 'update' }));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const openSettings = () => {\r\n    setSettings(true);\r\n  };\r\n\r\n  const closeSettings = () => {\r\n    setSettings(false);\r\n  };\r\n\r\n  const openRemoveModal = () => {\r\n    setRemoving(true);\r\n  };\r\n\r\n  const closeRemoveModal = () => {\r\n    setRemoving(false);\r\n  };\r\n\r\n  const openEmailModal = (lowStockItems) => {\r\n    if (emails.length > 0) {\r\n      setLowStockItems(lowStockItems);\r\n      setEmailing(true);\r\n    }\r\n  };\r\n\r\n  const closeEmailModal = () => {\r\n    setEmailing(false);\r\n  };\r\n\r\n  const openEditItemModal = () => {\r\n    setEditing(true);\r\n  };\r\n\r\n  const closeEditItemModal = () => {\r\n    setEditing(false);\r\n  };\r\n\r\n  const openDeleteItemModal = () => {\r\n    setDeleting(true);\r\n  };\r\n\r\n  const closeDeleteItemModal = () => {\r\n    setDeleting(false);\r\n  };\r\n\r\n  const closeAddNewItemModal = () => {\r\n    setAdding(false);\r\n  };\r\n\r\n  const closeAddItemsModal = () => {\r\n    setAdding(false);\r\n  };\r\n\r\n  const closeAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  const setAddModal = () => {\r\n    if (itemsToModify.length === 0) {\r\n      return (\r\n        <AddNewItemModal\r\n          itemsToModify={itemsToModify}\r\n          setItemsToModify={setItemsToModify}\r\n          closeModal={closeAddNewItemModal}\r\n          addItem={addItem}\r\n          isOpen={adding}\r\n          allItems={allItems}\r\n          setAllItems={setAllItems}\r\n          tree={tree}\r\n          setAlert={setAlert}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <AddItemsModal\r\n          itemsToAdd={itemsToModify}\r\n          setItemsToAdd={setItemsToModify}\r\n          setItemsToModify={setItemsToModify}\r\n          closeModal={closeAddItemsModal}\r\n          updateItemById={updateItemById}\r\n          isOpen={adding}\r\n          allItems={allItems}\r\n          setAllItems={setAllItems}\r\n          tree={tree}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader openSettings={openSettings}>\r\n        <div className={classes.root}>\r\n          <Grid\r\n            spacing={2}\r\n            container\r\n            justify='space-evenly'\r\n            direction='row'\r\n            alignItems='center'\r\n          >\r\n            <Grid item xs={12}>\r\n              <Box m={1}>\r\n                <Typography variant='h6'>\r\n                  <b>All Items:</b>\r\n                </Typography>\r\n              </Box>\r\n              <Paper>\r\n                <MainTable\r\n                  addItem={addItem}\r\n                  allItems={allItems}\r\n                  setAllItems={setAllItems}\r\n                  itemsToModify={itemsToModify}\r\n                  setItemsToModify={setItemsToModify}\r\n                  openRemoveModal={openRemoveModal}\r\n                  openDeleteItemModal={openDeleteItemModal}\r\n                  openEditItemModal={openEditItemModal}\r\n                  setAdding={setAdding}\r\n                  setAlert={setAlert}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={12}\r\n              spacing={2}\r\n              justify='flex-start'\r\n              direction='row'\r\n              alignItems='flex-start'\r\n            >\r\n              <Grid xs={9} lg={10} xl={11} item>\r\n                <Box m={1}>\r\n                  <Typography variant='h6'>\r\n                    <b>Expiring Soon:</b>\r\n                  </Typography>\r\n                </Box>\r\n                <ExpiringSoonPanel tableData={allItems} />\r\n              </Grid>\r\n              <Grid xs={3} lg={2} xl={1} item>\r\n                <Box m={1}>\r\n                  <Typography variant='h6'>\r\n                    <b>Low Stock:</b>\r\n                  </Typography>\r\n                </Box>\r\n                <Paper>\r\n                  <LowStockPanel\r\n                    openEmailModal={openEmailModal}\r\n                    listItems={allItems}\r\n                  />\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </PageHeader>\r\n      {settings ? (\r\n        <SettingsModal\r\n          tree={tree}\r\n          setTree={setTree}\r\n          emails={emails}\r\n          setEmails={setEmails}\r\n          addEmail={addEmail}\r\n          deleteEmailById={deleteEmailById}\r\n          isOpen={settings}\r\n          closeSettings={closeSettings}\r\n        />\r\n      ) : null}\r\n      {removing ? (\r\n        <RemoveItemModal\r\n          itemsToRemove={itemsToModify}\r\n          setItemsToModify={setItemsToModify}\r\n          isOpen={removing}\r\n          closeRemoveModal={closeRemoveModal}\r\n          deleteItemById={deleteItemById}\r\n          updateItemById={updateItemById}\r\n          allItems={allItems}\r\n          setAllItems={setAllItems}\r\n        />\r\n      ) : null}\r\n      {deleting ? (\r\n        <DeleteItemModal\r\n          itemsToDelete={itemsToModify}\r\n          setItemsToModify={setItemsToModify}\r\n          closeDeleteItemModal={closeDeleteItemModal}\r\n          deleteItemById={deleteItemById}\r\n          isOpen={deleting}\r\n          allItems={allItems}\r\n          setAllItems={setAllItems}\r\n        />\r\n      ) : null}\r\n      {editing ? (\r\n        <EditItemModal\r\n          itemsToModify={itemsToModify}\r\n          setItemsToModify={setItemsToModify}\r\n          closeEditItemModal={closeEditItemModal}\r\n          updateItemById={updateItemById}\r\n          isOpen={editing}\r\n          allItems={allItems}\r\n          setAllItems={setAllItems}\r\n          tree={tree}\r\n        />\r\n      ) : null}\r\n      {adding ? setAddModal() : null}\r\n      {emailing ? (\r\n        <EmailModal\r\n          itemsToRemove={itemsToModify}\r\n          isOpen={emailing}\r\n          closeEmailModal={closeEmailModal}\r\n          lowStockItems={lowStockItems}\r\n          emails={emails}\r\n          sendEmails={sendEmails}\r\n        />\r\n      ) : null}\r\n      {alert ? (\r\n        <SnackBar\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n          open={alert !== undefined}\r\n          message={alert.message}\r\n          autoHideDuration={2500}\r\n          onClose={closeAlert}\r\n        >\r\n          <Alert severity={alert.type}>{alert.message}</Alert>\r\n        </SnackBar>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\expiring-soon-panel.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\low-stock-panel.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\page-header.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\main-table.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-modal.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-tabs.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\simple-modal.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\remove-item-modal.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\tree.js",["94","95"],"import { uniqueId } from 'lodash';\r\n\r\nexport default class Tree {\r\n  constructor(root) {\r\n    this._root = root || null;\r\n  }\r\n\r\n  _traverse(callback) {\r\n    function goThrough(node) {\r\n      callback(node);\r\n      node.children.forEach((child) => {\r\n        goThrough(child);\r\n      });\r\n    }\r\n    goThrough(this._root);\r\n  }\r\n\r\n  _addNode(id, label, layer, isOpen, isSelected, editing, parent) {\r\n    const newNode = {\r\n      id: id,\r\n      layer: layer,\r\n      isOpen: isOpen,\r\n      isSelected: isSelected,\r\n      editing: editing,\r\n      children: [],\r\n      label: label,\r\n      parent: parent,\r\n    };\r\n\r\n    if (this._root === null) {\r\n      this._root = newNode;\r\n      return;\r\n    }\r\n\r\n    this._traverse((node) => {\r\n      if (node.label === parent && node.label !== label) {\r\n        node.children.push(newNode);\r\n      }\r\n    });\r\n  }\r\n\r\n  _removeNode(label, parent) {\r\n    this._traverse((node) => {\r\n      node.children.forEach((childNode, index) => {\r\n        if (childNode.label === label && childNode.parent === parent) {\r\n          node.children.splice(index, 1);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  _search(label) {\r\n    let returnNode = 'Not Found';\r\n    this._traverse((node) => {\r\n      if (node.label === label) {\r\n        returnNode = node;\r\n      }\r\n    });\r\n    return returnNode;\r\n  }\r\n\r\n  _displayLeafs(parentValue) {\r\n    const parentNode =\r\n      typeof parentValue === 'string' ? this._search(parentValue) : parentValue;\r\n    let leafsRet = [];\r\n    if (parentValue.children && !parentValue.children.length) {\r\n      return parentValue;\r\n    }\r\n\r\n    parentNode.children.forEach((child) => {\r\n      leafsRet.push(this._displayLeafs(child));\r\n    });\r\n\r\n    return leafsRet.flat();\r\n  }\r\n}\r\n\r\nclass Node {\r\n  constructor(label, open, editing, children) {\r\n    this.label = label;\r\n    this.open = open;\r\n    this.editing = editing;\r\n    this.children = children;\r\n  }\r\n}\r\n","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\email-modal.js",["96"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SimpleModal from './simple-modal.js';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  modalContentContainer: {\r\n    maxHeight: '60vh',\r\n    overflow: 'auto',\r\n  },\r\n  bottom: {\r\n    margin: '.8em',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction EmailModal(props) {\r\n  const { closeEmailModal, isOpen, emails, sendEmails, lowStockItems } = props;\r\n  const modalStyle = { minWidth: '300px' };\r\n  const classes = useStyles();\r\n\r\n  const [emailList, setEmailList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const modalList = emails.map((email) => {\r\n      return { isSelected: false, ...email };\r\n    });\r\n    setEmailList(modalList);\r\n  }, [emails]);\r\n\r\n  const handleConfirmButton = () => {\r\n    const message = lowStockItems\r\n      .map((item) => {\r\n        return item.name;\r\n      })\r\n      .join(', ');\r\n    const addressList = emailList.map((email) => {\r\n      if (email.isSelected) {\r\n        return email.address;\r\n      }\r\n    });\r\n    sendEmails(addressList, message);\r\n    closeEmailModal();\r\n  };\r\n\r\n  const handleItemClick = (emailId) => {\r\n    const updatedEmailList = emailList.map((email) => {\r\n      if (emailId === email._id) {\r\n        email.isSelected = !email.isSelected;\r\n        return email;\r\n      } else {\r\n        return email;\r\n      }\r\n    });\r\n    setEmailList(updatedEmailList);\r\n  };\r\n\r\n  return (\r\n    <SimpleModal\r\n      style={modalStyle}\r\n      closeModal={closeEmailModal}\r\n      isOpen={isOpen}\r\n      title='Send Email Alert'\r\n    >\r\n      <Box m={2}>\r\n        <List>\r\n          <Divider />\r\n          {emailList.map((email) => {\r\n            return (\r\n              <>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      onClick={() => handleItemClick(email._id)}\r\n                      edge='start'\r\n                      checked={email.isSelected}\r\n                      tabIndex={-1}\r\n                      disableRipple\r\n                      inputProps={{ 'aria-labelledby': email._id }}\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={email.name} />\r\n                </ListItem>\r\n                <Divider />\r\n              </>\r\n            );\r\n          })}\r\n        </List>\r\n      </Box>\r\n      <div className={classes.bottom}>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          onClick={handleConfirmButton}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </div>\r\n    </SimpleModal>\r\n  );\r\n}\r\n\r\nexport default EmailModal;\r\n","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\add-items-modal.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\delete-item-modal.js",["97","98","99"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\add-new-item-modal.js",["100","101","102","103","104","105"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\edit-item-modal.js",["106","107","108","109"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\email-tab.js",["110","111"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ArrowRightOutlinedIcon from '@material-ui/icons/ArrowRightOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  list: { overflow: 'auto', maxHeight: '200px' },\r\n}));\r\n\r\nexport default function EmailTab() {\r\n  const classes = useStyles();\r\n\r\n  const [emails, setEmails] = useState([\r\n    { name: 'jamie', address: 'test@gmail.com' },\r\n    { name: 'nicole', address: 'test@gmail.com' },\r\n  ]);\r\n  const [name, setName] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleDelete = (e, index) => {\r\n    let updatedEmails = [];\r\n    emails.map((email, i) => {\r\n      if (index !== i) {\r\n        updatedEmails.push(email);\r\n      }\r\n    });\r\n    setEmails(updatedEmails);\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    const name = e.target.value;\r\n    setName(name);\r\n    setError(false);\r\n  };\r\n\r\n  const handleAddressChange = (e) => {\r\n    const address = e.target.value;\r\n    setAddress(address);\r\n    setError(false);\r\n  };\r\n\r\n  const handleAddButton = () => {\r\n    setError(true);\r\n    if (name && address) {\r\n      setEmails([...emails, { name, address }]);\r\n\r\n      setError(false);\r\n      setName('');\r\n      setAddress('');\r\n    }\r\n  };\r\n\r\n  const setOutput = () => {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Button onClick={handleAddButton} color='primary' variant='outlined'>\r\n          <AddIcon />\r\n          Add new email\r\n        </Button>\r\n\r\n        <TextField\r\n          helperText={error ? 'Enter name' : ''}\r\n          error={error && name.length === 0}\r\n          value={name}\r\n          label='Name:'\r\n          margin='dense'\r\n          variant='outlined'\r\n          fullWidth\r\n          required\r\n          onChange={(e) => handleNameChange(e)}\r\n        />\r\n        <TextField\r\n          helperText={error ? 'Enter address' : ''}\r\n          error={error && address.length === 0}\r\n          value={address}\r\n          label='Email address:'\r\n          margin='dense'\r\n          variant='outlined'\r\n          fullWidth\r\n          required\r\n          onChange={(e) => handleAddressChange(e)}\r\n        />\r\n        <Box my={1}>\r\n          <List className={classes.list}>\r\n            {emails.map((email, index) => {\r\n              return (\r\n                <ListItem>\r\n                  <ArrowRightOutlinedIcon />\r\n                  <ListItemText\r\n                    primary={email.name}\r\n                    secondary={email.address}\r\n                  />\r\n                  <ListItemSecondaryAction>\r\n                    <IconButton\r\n                      onClick={(e) => handleDelete(e, index)}\r\n                      edge='end'\r\n                      aria-label='delete'\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Box>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return setOutput();\r\n}\r\n","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\room-location-tab.js",["112","113"],"import React, { useState } from 'react';\r\nimport RoomLocationTree from './room-location-tree.js';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Lang, { uniqueId } from 'lodash';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  deleteButton: {\r\n    float: 'right',\r\n  },\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport default function RoomLocationTab(props) {\r\n  const { tree, setTree } = props;\r\n  const classes = useStyles();\r\n\r\n  const handleDelete = () => {\r\n    const treeCopy = Lang.cloneDeep(tree);\r\n    treeCopy._traverse((node) => {\r\n      if (node.isSelected) {\r\n        treeCopy._removeNode(node.label, node.parent);\r\n      }\r\n    });\r\n    setTree(treeCopy);\r\n  };\r\n\r\n  const handleClick = (nodeId) => {\r\n    const treeCopy = Lang.cloneDeep(tree);\r\n    treeCopy._traverse((node) => {\r\n      node.isSelected = false;\r\n      if (node.id === nodeId) {\r\n        node.isOpen = !node.isOpen;\r\n      }\r\n    });\r\n    setTree(treeCopy);\r\n  };\r\n\r\n  const handleDoubleClick = (nodeId) => {\r\n    const treeCopy = Lang.cloneDeep(tree);\r\n    treeCopy._traverse((node) => {\r\n      node.isSelected = false;\r\n      if (node.id === nodeId) {\r\n        node.editing = true;\r\n      } else {\r\n        node.editing = false;\r\n      }\r\n    });\r\n    setTree(treeCopy);\r\n  };\r\n\r\n  const handleClickAway = (e) => {\r\n    /* const treeCopy = Lang.cloneDeep(tree);\r\n    treeCopy._traverse((node) => {\r\n      node.editing = false;\r\n      node.isSelected = false;\r\n    });\r\n    setTree(treeCopy); */\r\n  };\r\n\r\n  const handleKeyPressed = (e) => {\r\n    if (e.key === 'Enter') {\r\n      const treeCopy = Lang.cloneDeep(tree);\r\n      treeCopy._traverse((node) => (node.editing = false));\r\n      setTree(treeCopy);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e, nodeId) => {\r\n    const text = e.target.value;\r\n    const treeCopy = Lang.cloneDeep(tree);\r\n    treeCopy._traverse((node) => {\r\n      if (node.id === nodeId) {\r\n        node.label = text;\r\n      }\r\n    });\r\n    setTree(treeCopy);\r\n  };\r\n\r\n  const setSelected = (nodeId) => {\r\n    const treeCopy = Lang.cloneDeep(tree);\r\n    treeCopy._traverse((node) => {\r\n      if (node.id === nodeId) {\r\n        if (!isEditing()) {\r\n          node.isSelected = !node.isSelected;\r\n        }\r\n      } else {\r\n        node.isSelected = false;\r\n      }\r\n    });\r\n    setTree(treeCopy);\r\n  };\r\n\r\n  const isEditing = () => {\r\n    let result = false;\r\n    tree._traverse((node) => {\r\n      if (node.editing) {\r\n        result = true;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const isSelected = () => {\r\n    let output = false;\r\n    tree._traverse((node) => {\r\n      if (node.isSelected) {\r\n        output = true;\r\n      }\r\n    });\r\n    return output;\r\n  };\r\n\r\n  const disableAddChild = () => {\r\n    if (isSelected()) {\r\n      const selectedNode = getSelectedNode();\r\n      return selectedNode.layer === 2;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleAddChild = (nodeId) => {\r\n    const treeCopy = Lang.cloneDeep(tree);\r\n    if (tree._root !== null) {\r\n      const selectedNode = getSelectedNode();\r\n      const { label, parent, layer } = selectedNode;\r\n      treeCopy._traverse((node) => {\r\n        node.editing = false;\r\n        if (node.label === label && node.parent === parent) {\r\n          node.isOpen = true;\r\n        }\r\n      });\r\n      treeCopy._addNode(\r\n        uniqueId(),\r\n        'new',\r\n        layer + 1,\r\n        false,\r\n        false,\r\n        false,\r\n        label\r\n      );\r\n      setTree(treeCopy);\r\n    } else {\r\n      treeCopy._addNode(uniqueId(), 'home', 0, false, false, false, null);\r\n      setTree(treeCopy);\r\n    }\r\n  };\r\n\r\n  const getSelectedNode = () => {\r\n    let result = null;\r\n    tree._traverse((node) => {\r\n      if (node.isSelected) {\r\n        result = node;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const setOutput = () => {\r\n    if (tree._root !== null) {\r\n      const selected = isSelected();\r\n      return (\r\n        <div className={classes.root}>\r\n          <IconButton\r\n            color='primary'\r\n            disabled={disableAddChild()}\r\n            onClick={handleAddChild}\r\n          >\r\n            <PlaylistAddIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color='primary'\r\n            disabled={!selected || tree._root.isSelected}\r\n            onClick={handleDelete}\r\n            className={classes.deleteButton}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n          <RoomLocationTree\r\n            handleClick={handleClick}\r\n            handleDoubleClick={handleDoubleClick}\r\n            handleKeyPressed={handleKeyPressed}\r\n            handleChange={handleChange}\r\n            setSelected={setSelected}\r\n            tree={tree}\r\n            setTree={setTree}\r\n            handleClickAway={(e) => handleClickAway(e)}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={classes.root}>\r\n          <IconButton color='primary' onClick={handleAddChild}>\r\n            <PlaylistAddIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            color='primary'\r\n            onClick={handleDelete}\r\n            className={classes.deleteButton}\r\n            disabled\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return setOutput();\r\n}\r\n","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\room-location-tree.js",["114","115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":130,"column":10,"nodeType":"122","messageId":"123","endLine":130,"endColumn":19},{"ruleId":"120","severity":1,"message":"124","line":154,"column":9,"nodeType":"122","messageId":"123","endLine":154,"endColumn":23},{"ruleId":"120","severity":1,"message":"125","line":155,"column":13,"nodeType":"122","messageId":"123","endLine":155,"endColumn":15},{"ruleId":"120","severity":1,"message":"126","line":155,"column":17,"nodeType":"122","messageId":"123","endLine":155,"endColumn":22},{"ruleId":"120","severity":1,"message":"127","line":161,"column":9,"nodeType":"122","messageId":"123","endLine":161,"endColumn":20},{"ruleId":"120","severity":1,"message":"125","line":162,"column":13,"nodeType":"122","messageId":"123","endLine":162,"endColumn":15},{"ruleId":"120","severity":1,"message":"126","line":162,"column":17,"nodeType":"122","messageId":"123","endLine":162,"endColumn":22},{"ruleId":"120","severity":1,"message":"128","line":203,"column":13,"nodeType":"122","messageId":"123","endLine":203,"endColumn":16},{"ruleId":"120","severity":1,"message":"129","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":18},{"ruleId":"120","severity":1,"message":"130","line":78,"column":7,"nodeType":"122","messageId":"123","endLine":78,"endColumn":11},{"ruleId":"131","severity":1,"message":"132","line":46,"column":47,"nodeType":"133","messageId":"134","endLine":46,"endColumn":49},{"ruleId":"120","severity":1,"message":"135","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":18},{"ruleId":"120","severity":1,"message":"136","line":52,"column":9,"nodeType":"122","messageId":"123","endLine":52,"endColumn":24},{"ruleId":"120","severity":1,"message":"137","line":62,"column":9,"nodeType":"122","messageId":"123","endLine":62,"endColumn":27},{"ruleId":"120","severity":1,"message":"138","line":40,"column":5,"nodeType":"122","messageId":"123","endLine":40,"endColumn":18},{"ruleId":"120","severity":1,"message":"139","line":43,"column":5,"nodeType":"122","messageId":"123","endLine":43,"endColumn":13},{"ruleId":"120","severity":1,"message":"140","line":44,"column":5,"nodeType":"122","messageId":"123","endLine":44,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":67,"column":6,"nodeType":"143","endLine":67,"endColumn":17,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":111,"column":5,"nodeType":"147","messageId":"148","endLine":130,"endColumn":6},{"ruleId":"120","severity":1,"message":"149","line":211,"column":9,"nodeType":"122","messageId":"123","endLine":211,"endColumn":23},{"ruleId":"141","severity":1,"message":"150","line":61,"column":6,"nodeType":"143","endLine":61,"endColumn":21,"suggestions":"151"},{"ruleId":"141","severity":1,"message":"152","line":67,"column":6,"nodeType":"143","endLine":67,"endColumn":18,"suggestions":"153"},{"ruleId":"145","severity":1,"message":"146","line":108,"column":5,"nodeType":"147","messageId":"148","endLine":127,"endColumn":6},{"ruleId":"120","severity":1,"message":"149","line":206,"column":9,"nodeType":"122","messageId":"123","endLine":206,"endColumn":23},{"ruleId":"120","severity":1,"message":"154","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":18},{"ruleId":"131","severity":1,"message":"155","line":37,"column":27,"nodeType":"133","messageId":"156","endLine":37,"endColumn":29},{"ruleId":"120","severity":1,"message":"157","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"158","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":15},{"ruleId":"120","severity":1,"message":"157","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"159","line":10,"column":8,"nodeType":"122","messageId":"123","endLine":10,"endColumn":21},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'locations' is assigned a value but never used.","Identifier","unusedVar","'deleteLocation' is assigned a value but never used.","'id' is assigned a value but never used.","'label' is assigned a value but never used.","'addLocation' is assigned a value but never used.","'res' is assigned a value but never used.","'uniqueId' is defined but never used.","'Node' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'IconButton' is defined but never used.","'handleAddButton' is assigned a value but never used.","'handleRemoveButton' is assigned a value but never used.","'itemsToModify' is assigned a value but never used.","'allItems' is assigned a value but never used.","'setAllItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getLocations' and 'getRooms'. Either include them or remove the dependency array.","ArrayExpression",["162"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'expirationDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getRooms'. Either include it or remove the dependency array.",["163"],"React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.",["164"],"'Typography' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'useState' is defined but never used.","'AddIcon' is defined but never used.","'ListSubheader' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [getLocations, getRooms, itemToAdd]",{"range":"171","text":"172"},"Update the dependencies array to be: [getRooms, itemsToModify]",{"range":"173","text":"174"},"Update the dependencies array to be: [getLocations, itemToEdit]",{"range":"175","text":"176"},[1653,1664],"[getLocations, getRooms, itemToAdd]",[1393,1408],"[getRooms, itemsToModify]",[1522,1534],"[getLocations, itemToEdit]"]