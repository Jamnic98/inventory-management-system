[{"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\index.js":"1","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\App.js":"2","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\expiring-soon-panel.js":"3","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\low-stock-panel.js":"4","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\page-header.js":"5","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\main-table.js":"6","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-modal.js":"7","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-tabs.js":"8","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\simple-modal.js":"9","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\remove-item-modal.js":"10","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\room-location-tree.js":"11","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\room-location-tab.js":"12","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\tree.js":"13"},{"size":151,"mtime":1615203449634,"results":"14","hashOfConfig":"15"},{"size":5867,"mtime":1616275648001,"results":"16","hashOfConfig":"15"},{"size":5333,"mtime":1615996234221,"results":"17","hashOfConfig":"15"},{"size":1640,"mtime":1615890645112,"results":"18","hashOfConfig":"15"},{"size":1594,"mtime":1615890494657,"results":"19","hashOfConfig":"15"},{"size":10706,"mtime":1616166690451,"results":"20","hashOfConfig":"15"},{"size":493,"mtime":1616346029784,"results":"21","hashOfConfig":"15"},{"size":2498,"mtime":1616324173430,"results":"22","hashOfConfig":"15"},{"size":1705,"mtime":1616324217793,"results":"23","hashOfConfig":"15"},{"size":4508,"mtime":1616275980113,"results":"24","hashOfConfig":"15"},{"size":5645,"mtime":1616347211303,"results":"25","hashOfConfig":"15"},{"size":2662,"mtime":1616342171234,"results":"26","hashOfConfig":"15"},{"size":1711,"mtime":1616335781837,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"p4asvj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\index.js",[],["57","58"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\App.js",["59","60","61","62","63"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PageHeader from './components/page-header.js';\r\nimport ExpiringSoonPanel from './components/expiring-soon-panel.js';\r\nimport SettingsModal from './components/settings-modal.js';\r\nimport RemoveItemModal from './components/remove-item-modal.js';\r\nimport LowStockPanel from './components/low-stock-panel.js';\r\nimport MainTable from './components/main-table.js';\r\nimport SnackBar from '@material-ui/core/SnackBar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport axios from 'axios';\r\n\r\nconst socket = new WebSocket('ws://192.168.68.116:8080');\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [alert, setAlert] = useState(null);\r\n  const [allItems, setAllItems] = useState([]);\r\n  const [itemsToModify, setItemsToModify] = useState([]);\r\n  const [settings, setSettings] = useState(true);\r\n  const [removing, setRemoving] = useState(false);\r\n  const [editing, setEditing] = useState(false);\r\n  const [adding, setAdding] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getAllItems().then((items) => setAllItems(items));\r\n  }, []);\r\n\r\n  socket.addEventListener('message', async () => {\r\n    setAllItems(await getAllItems());\r\n  });\r\n\r\n  const getAllItems = async () => {\r\n    const response = await axios.get('/current-items');\r\n    return response.data.reverse();\r\n  };\r\n\r\n  const addItem = async () => {\r\n    try {\r\n      const item = {\r\n        name: \"ben & jerry's ice cream\",\r\n        quantity: 3,\r\n        room: 'kitchen',\r\n        location: 'freezer',\r\n        expirationDate: new Date(0),\r\n        lowStockAlert: true,\r\n      };\r\n      const response = await axios.post('/current-items/add', item);\r\n      setAllItems([response.data, ...allItems]);\r\n      socket.send('add');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const deleteItemById = async (itemId) => {\r\n    try {\r\n      await axios.delete(`/current-items/${itemId}`);\r\n      socket.send('delete');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const updateItemById = async (updatedItem) => {\r\n    try {\r\n      const { _id } = updatedItem;\r\n      await axios.put(`/current-items/update/${_id}`, updatedItem);\r\n      socket.send('update');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const openSettings = () => {\r\n    setSettings(true);\r\n  };\r\n\r\n  const closeSettings = () => {\r\n    setSettings(false);\r\n  };\r\n\r\n  const openRemoveModal = () => {\r\n    setRemoving(true);\r\n  };\r\n\r\n  const closeRemoveModal = () => {\r\n    setRemoving(false);\r\n  };\r\n\r\n  const openEditModal = () => {\r\n    setEditing(true);\r\n  };\r\n\r\n  const closeEditModal = () => {\r\n    setEditing(false);\r\n  };\r\n\r\n  const closeAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader openSettings={openSettings}>\r\n        <div className={classes.root}>\r\n          <Grid\r\n            spacing={2}\r\n            container\r\n            justify='space-evenly'\r\n            direction='row'\r\n            alignItems='center'\r\n          >\r\n            <Grid item xs={12}>\r\n              <Box m={1}>\r\n                <Typography variant='h6'>\r\n                  <b>All Items:</b>\r\n                </Typography>\r\n              </Box>\r\n              <Paper>\r\n                <MainTable\r\n                  addItem={addItem}\r\n                  allItems={allItems}\r\n                  setAllItems={setAllItems}\r\n                  openRemoveModal={openRemoveModal}\r\n                  itemsToModify={itemsToModify}\r\n                  setItemsToModify={setItemsToModify}\r\n                  setAlert={setAlert}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={12}\r\n              spacing={2}\r\n              justify='flex-start'\r\n              direction='row'\r\n              alignItems='flex-start'\r\n            >\r\n              <Grid xs={9} lg={10} xl={11} item>\r\n                <Box m={1}>\r\n                  <Typography variant='h6'>\r\n                    <b>Expiring Soon:</b>\r\n                  </Typography>\r\n                </Box>\r\n                <ExpiringSoonPanel tableData={allItems} />\r\n              </Grid>\r\n              <Grid xs={3} lg={2} xl={1} item>\r\n                <Box m={1}>\r\n                  <Typography variant='h6'>\r\n                    <b>Low Stock:</b>\r\n                  </Typography>\r\n                </Box>\r\n                <Paper>\r\n                  <LowStockPanel listItems={allItems} />\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </PageHeader>\r\n      {settings ? (\r\n        <SettingsModal isOpen={settings} closeSettings={closeSettings} />\r\n      ) : null}\r\n      {removing ? (\r\n        <RemoveItemModal\r\n          itemsToRemove={itemsToModify}\r\n          isOpen={removing}\r\n          closeRemoveModal={closeRemoveModal}\r\n          deleteItemById={deleteItemById}\r\n          updateItemById={updateItemById}\r\n          setItemsToModify={setItemsToModify}\r\n          allItems={allItems}\r\n          setAllItems={setAllItems}\r\n        />\r\n      ) : null}\r\n      {alert ? (\r\n        <SnackBar\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n          open={alert !== undefined}\r\n          message={alert.message}\r\n          autoHideDuration={2500}\r\n          onClose={closeAlert}\r\n        >\r\n          <Alert severity={alert.type}>{alert.message}</Alert>\r\n        </SnackBar>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\expiring-soon-panel.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\low-stock-panel.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\page-header.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\main-table.js",["64","65","66","67","68"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Box from '@material-ui/core/Box';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst ROWS_PER_PAGE = 5;\r\nconst ROW_HEIGHT = 53;\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'item',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Item',\r\n  },\r\n  { id: 'quantity', numeric: true, disablePadding: false, label: 'Quantity' },\r\n  { id: 'room', numeric: true, disablePadding: false, label: 'Room' },\r\n  { id: 'location', numeric: true, disablePadding: false, label: 'Location' },\r\n  {\r\n    id: 'expirationDate',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Exp. date',\r\n  },\r\n  {\r\n    id: 'lowStockAlert',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Low Stock Alert',\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, numSelected, rowCount } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding='checkbox'>\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all items' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'center' : 'center'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n          >\r\n            <div className={classes.textContainer}>{headCell.label}</div>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  tableContainer: {\r\n    minHeight: `${100 + (ROWS_PER_PAGE - 1) * ROW_HEIGHT}px`,\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  textContainer: {\r\n    display: 'block',\r\n    /* width: '100%', */\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  tablePagination: {\r\n    display: 'flex',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function MainTable(props) {\r\n  const {\r\n    allItems,\r\n    deleteItemById,\r\n    addItem,\r\n    setAllItems,\r\n    openDeleteModal,\r\n    openAddModal,\r\n    openEditModal,\r\n    itemsToModify,\r\n    setItemsToModify,\r\n    setAlert,\r\n  } = props;\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [filterWord, setFilterWord] = useState('');\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  const emptyRows =\r\n    ROWS_PER_PAGE -\r\n    Math.min(ROWS_PER_PAGE, filteredData.length - page * ROWS_PER_PAGE);\r\n\r\n  useEffect(() => {\r\n    const trimmedFW = filterWord.trim().toLowerCase();\r\n    const regEx = new RegExp(trimmedFW, 'i');\r\n    setFilteredData(\r\n      allItems.filter((row) => {\r\n        if (trimmedFW.length > 0) {\r\n          return regEx.test(row.name);\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n    );\r\n  }, [allItems, filterWord]);\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      setItemsToModify(filteredData);\r\n    } else {\r\n      setItemsToModify([]);\r\n    }\r\n  };\r\n\r\n  const handleClick = (_event, item) => {\r\n    const itemIDArray = itemsToModify.map((item) => item._id);\r\n    const selectedIndex = itemIDArray.indexOf(item._id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(itemsToModify, item);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(itemsToModify.slice(1));\r\n    } else if (selectedIndex === itemsToModify.length - 1) {\r\n      newSelected = newSelected.concat(itemsToModify.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        itemsToModify.slice(0, selectedIndex),\r\n        itemsToModify.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setItemsToModify(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (_event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const isSelected = (row) =>\r\n    itemsToModify.map((item) => item._id).indexOf(row._id) !== -1;\r\n\r\n  const setExpirationDate = (date) => {\r\n    return parseInt(Date.parse(date)) !== 0\r\n      ? new Date(date).toLocaleDateString()\r\n      : 'N/A';\r\n  };\r\n\r\n  const handleDeleteButton = async () => {\r\n    if (itemsToModify.length > 0) {\r\n      openDeleteModal();\r\n    } else {\r\n      setAlert({ message: 'Select an item to delete', type: 'error' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box py={1}>\r\n      <Box mx={1}>\r\n        <ButtonGroup\r\n          color='default'\r\n          variant='text'\r\n          size='large'\r\n          aria-label='button group'\r\n        >\r\n          <Button onClick={addItem} endIcon={<AddIcon>add</AddIcon>}>\r\n            add\r\n          </Button>\r\n          <Button /* onClick={addItem} */ endIcon={<EditIcon>edit</EditIcon>}>\r\n            edit\r\n          </Button>\r\n          <Button\r\n            onClick={handleDeleteButton}\r\n            endIcon={<DeleteIcon>delete</DeleteIcon>}\r\n          >\r\n            delete\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Box>\r\n      <TableContainer className={classes.tableContainer}>\r\n        <Table\r\n          className={classes.table}\r\n          aria-labelledby='tableTitle'\r\n          aria-label='enhanced table'\r\n        >\r\n          <EnhancedTableHead\r\n            classes={classes}\r\n            numSelected={itemsToModify.length}\r\n            onSelectAllClick={handleSelectAllClick}\r\n            rowCount={filteredData.length}\r\n          />\r\n          <TableBody>\r\n            {filteredData\r\n              .slice(page * ROWS_PER_PAGE, page * ROWS_PER_PAGE + ROWS_PER_PAGE)\r\n              .map((row, index) => {\r\n                const isItemSelected = isSelected(row);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    onClick={(event) => handleClick(event, row)}\r\n                    role='checkbox'\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row._id}\r\n                  >\r\n                    <TableCell className={classes.tableCell} padding='checkbox'>\r\n                      <Checkbox\r\n                        checked={isItemSelected}\r\n                        inputProps={{ 'aria-labelledby': labelId }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className={classes.tableCell}\r\n                      component='th'\r\n                      id={labelId}\r\n                      scope='row'\r\n                      padding='none'\r\n                      align='center'\r\n                    >\r\n                      <div className={classes.textContainer}>{row.name}</div>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell} align='center'>\r\n                      <div className={classes.textContainer}>\r\n                        {row.quantity}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell} align='center'>\r\n                      <div className={classes.textContainer}>{row.room}</div>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell} align='center'>\r\n                      <div className={classes.textContainer}>\r\n                        {row.location}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell} align='center'>\r\n                      <div className={classes.textContainer}>\r\n                        {setExpirationDate(row.expirationDate)}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell} align='center'>\r\n                      <div className={classes.textContainer}>\r\n                        {row.lowStockAlert.toString()}\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: ROW_HEIGHT * emptyRows }}>\r\n                <TableCell colSpan={7} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Box mx={2}>\r\n        <TextField\r\n          width='90%'\r\n          onChange={(e) => {\r\n            setPage(0);\r\n            setFilterWord(e.target.value);\r\n          }}\r\n          label='Search by item'\r\n          variant='outlined'\r\n          margin='normal'\r\n          value={filterWord}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position='end'>\r\n                <Button onClick={() => setFilterWord('')}>\r\n                  <CloseIcon />\r\n                </Button>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        ></TextField>\r\n        <TablePagination\r\n          className={classes.tablePagination}\r\n          rowsPerPageOptions={[0]}\r\n          component='div'\r\n          count={filteredData.length}\r\n          rowsPerPage={ROWS_PER_PAGE}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-modal.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\settings-tabs.js",["69","70","71","72","73","74"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\simple-modal.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\remove-item-modal.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\room-location-tree.js",["75","76"],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\room-location-tab.js",[],"C:\\Users\\Jamie\\Documents\\Programming\\React Projects\\Inventory Management System\\inventory-management-system\\client\\src\\components\\tree.js",["77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":32,"column":10,"nodeType":"84","messageId":"85","endLine":32,"endColumn":17},{"ruleId":"82","severity":1,"message":"86","line":33,"column":10,"nodeType":"84","messageId":"85","endLine":33,"endColumn":16},{"ruleId":"82","severity":1,"message":"87","line":33,"column":18,"nodeType":"84","messageId":"85","endLine":33,"endColumn":27},{"ruleId":"82","severity":1,"message":"88","line":101,"column":9,"nodeType":"84","messageId":"85","endLine":101,"endColumn":22},{"ruleId":"82","severity":1,"message":"89","line":105,"column":9,"nodeType":"84","messageId":"85","endLine":105,"endColumn":23},{"ruleId":"82","severity":1,"message":"90","line":13,"column":8,"nodeType":"84","messageId":"85","endLine":13,"endColumn":18},{"ruleId":"82","severity":1,"message":"91","line":121,"column":5,"nodeType":"84","messageId":"85","endLine":121,"endColumn":19},{"ruleId":"82","severity":1,"message":"92","line":123,"column":5,"nodeType":"84","messageId":"85","endLine":123,"endColumn":16},{"ruleId":"82","severity":1,"message":"93","line":125,"column":5,"nodeType":"84","messageId":"85","endLine":125,"endColumn":17},{"ruleId":"82","severity":1,"message":"88","line":126,"column":5,"nodeType":"84","messageId":"85","endLine":126,"endColumn":18},{"ruleId":"82","severity":1,"message":"94","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":18},{"ruleId":"82","severity":1,"message":"95","line":9,"column":8,"nodeType":"84","messageId":"85","endLine":9,"endColumn":24},{"ruleId":"82","severity":1,"message":"90","line":10,"column":8,"nodeType":"84","messageId":"85","endLine":10,"endColumn":18},{"ruleId":"82","severity":1,"message":"96","line":11,"column":8,"nodeType":"84","messageId":"85","endLine":11,"endColumn":23},{"ruleId":"82","severity":1,"message":"97","line":12,"column":8,"nodeType":"84","messageId":"85","endLine":12,"endColumn":15},{"ruleId":"82","severity":1,"message":"98","line":13,"column":8,"nodeType":"84","messageId":"85","endLine":13,"endColumn":18},{"ruleId":"82","severity":1,"message":"99","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"100","line":111,"column":9,"nodeType":"84","messageId":"85","endLine":111,"endColumn":18},{"ruleId":"82","severity":1,"message":"101","line":73,"column":7,"nodeType":"84","messageId":"85","endLine":73,"endColumn":11},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'editing' is assigned a value but never used.","Identifier","unusedVar","'adding' is assigned a value but never used.","'setAdding' is assigned a value but never used.","'openEditModal' is assigned a value but never used.","'closeEditModal' is assigned a value but never used.","'IconButton' is defined but never used.","'deleteItemById' is assigned a value but never used.","'setAllItems' is assigned a value but never used.","'openAddModal' is assigned a value but never used.","'Typography' is defined but never used.","'RoomLocationTree' is defined but never used.","'PlaylistAddIcon' is defined but never used.","'AddIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'useState' is defined but never used.","'clearEdit' is assigned a value but never used.","'Node' is defined but never used.","no-global-assign","no-unsafe-negation"]